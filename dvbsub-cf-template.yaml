Resources:

  VideoCaptionBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "${AWS::AccountId}-video-caption-bucket"
      VersioningConfiguration:
        Status: Enabled

  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: LambdaAccessToS3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${VideoCaptionBucket}/*"

  CaptionExtractorLambdaLayer:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - python3.8
      Content:
        S3Bucket: ccextractor
        S3Key: ccextractor.zip
      Description: Lambda layer containing ccextractor binary.

  CaptionExtractorLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Code:
        S3Bucket: sf-dvdsub-conversion
        S3Key: dvbsub-conversion.zip
      MemorySize: 1024
      Timeout: 900
      Layers:
        - !Ref CaptionExtractorLambdaLayer

Outputs:
  CaptionBucketName:
    Description: "Name of the bucket storing videos and captions"
    Value: !Ref VideoCaptionBucket
  CaptionExtractorLambdaFunctionArn:
    Description: "ARN of the Lambda function extracting captions"
    Value: !GetAtt CaptionExtractorLambdaFunction.Arn

